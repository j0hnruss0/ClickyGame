{"version":3,"sources":["images/springfield.jpg","components/NavBar.js","components/Wrapper.js","components/Game.js","components/Card.js","components/Footer.js","App.js","index.js"],"names":["module","exports","NavBar","props","className","currentRun","highScore","Wrapper","children","Game","onClick","style","message","Card","key","id","pickedChar","value","cursor","src","photo","alt","name","Footer","App","state","clicked","lastMove","characters","setBoard","shuffled","forEach","chars","push","i","length","j","Math","floor","random","map","data","picked","filter","char","console","log","includes","setState","concat","makeMessage","animateResult","gameBoard","document","querySelector","classList","contains","add","remove","this","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.da0262f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/springfield.a47134d3.jpg\";","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction NavBar(props) {\r\n  return (\r\n      <ul className=\"nav navbar mb-4\">\r\n          <li className=\"nav-item\">\r\n              <h3 className=\"app-name\"><strong>Simpsons Clicky Game</strong></h3>\r\n          </li>\r\n          <li className=\"nav-item score-card mr-4\">\r\n              <p>Score: {props.currentRun} || Hi-Score: {props.highScore}</p>\r\n          </li>\r\n      </ul>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper container\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Game(props) {\r\n  return (\r\n    <div className=\"game-board row\" onClick={props.style}>\r\n      <div className=\"col-10 offset-1 alert-box\">\r\n          <p className=\"text-center text-message\"><strong>{props.message}</strong></p>\r\n      </div>\r\n      {props.children}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Game;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nfunction Card(props) {\r\n  \r\n  return (\r\n    <div className=\"col-2 char-card\" key={props.id} onClick={() => props.pickedChar(props.value)} style={{cursor: \"pointer\"}}>\r\n      <img className=\"char-pic\" src={props.photo} alt={props.name}/>\r\n      <h4 className=\"text-center pb-1\">{props.name}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer(props) {\r\n    return (\r\n    <div className=\"footer pb-2 mt-5\">\r\n        <p className=\"text-center my-name\"><strong>Made by John Russo, 2019</strong></p>\r\n    </div>\r\n    );\r\n  }\r\n  \r\n  export default Footer;","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Game from \"./components/Game\";\r\nimport Card from \"./components/Card\";\r\nimport Footer from \"./components/Footer\"\r\nimport characters from \"./characters.json\";\r\nimport \"./components/style.css\";\r\nimport \"./images/springfield.jpg\"\r\n\r\nclass App extends Component {\r\n  state = {\r\n    currentRun: 0,\r\n    highScore: 0,\r\n    clicked: [],\r\n    lastMove: null,\r\n    characters\r\n  };\r\n\r\n  setBoard = () => {\r\n    let shuffled = [];\r\n    characters.forEach(chars => \r\n      shuffled.push(chars)\r\n    );\r\n    //console.log(shuffled);\r\n    for (let i = shuffled.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n    };\r\n    \r\n    return shuffled.map(data => (\r\n      <Card\r\n        key={data.id}\r\n        value={data.id}\r\n        name={data.name}\r\n        photo={data.photo}\r\n        pickedChar={this.pickedChar}\r\n      />\r\n    ))\r\n  };\r\n\r\n  pickedChar = (id) => {\r\n    const picked = this.state.characters.filter(char => char.id === id);\r\n    console.log(picked[0].id);\r\n    if (!this.state.clicked.includes(picked[0].id) && this.state.highScore > this.state.currentRun && this.state.clicked.length < 23) {\r\n      this.setState(state => {\r\n        return {\r\n          clicked: state.clicked.concat(picked[0].id),\r\n          currentRun: state.currentRun + 1,\r\n          lastMove: \"won\"\r\n        };\r\n      });\r\n    } else if (!this.state.clicked.includes(picked[0].id) && this.state.highScore <= this.state.currentRun && this.state.clicked.length < 23) {\r\n      this.setState(state => {\r\n        return {\r\n          clicked: state.clicked.concat(picked[0].id),\r\n          currentRun: state.currentRun + 1,\r\n          highScore: state.highScore + 1,\r\n          lastMove: \"won\"\r\n        };\r\n      });\r\n    } else if (!this.state.clicked.includes(picked[0].id) && this.state.clicked.length === 23) {\r\n      this.setState(state => {\r\n        return {\r\n          clicked: [],\r\n          currentRun: state.currentRun + 1,\r\n          highScore: state.highScore + 1,\r\n          lastMove: \"victory\"\r\n        };\r\n      });\r\n    } else if (this.state.clicked.includes(picked[0].id)) {\r\n      this.setState(() => {\r\n        return {\r\n          clicked: [],\r\n          currentRun: 0,\r\n          lastMove: \"lost\"\r\n        };\r\n      });\r\n    }\r\n    console.log(this.state.clicked.length);\r\n    //console.log(this.state.currentRun);\r\n  }\r\n\r\n  makeMessage = () => {\r\n    return this.state.lastMove === \"won\" ? \"God job, keep it up!\"\r\n      : this.state.lastMove === \"lost\" ? \"Oops, you picked that already. Your best score is \" + this.state.highScore + \". Keep clicking to play again!!\"\r\n      : this.state.lastMove === \"victory\" ? \"You picked them all, you win!! Keep clicking to play again!!\"\r\n      : \"Click on characters below, but you can't pick the same character twice!\" \r\n  };\r\n\r\n  animateResult = () => {\r\n    const gameBoard = document.querySelector(\".game-board\");\r\n    if (this.state.lastMove === \"won\" && !gameBoard.classList.contains(\"right-guess\") && !gameBoard.classList.contains(\"right-guess-again\")) {\r\n      return (\r\n        gameBoard.classList.add(\"right-guess\"),\r\n        gameBoard.classList.remove(\"wrong-guess\"),\r\n        gameBoard.classList.remove(\"victory-show\")\r\n      );\r\n    } else if (this.state.lastMove === \"lost\") {\r\n      return (\r\n        gameBoard.classList.add(\"wrong-guess\"),\r\n        gameBoard.classList.remove(\"right-guess\"),\r\n        gameBoard.classList.remove(\"right-guess-again\"),\r\n        gameBoard.classList.remove(\"victory-show\")\r\n      );\r\n    } else if (this.state.lastMove === \"won\" && gameBoard.classList.contains(\"right-guess\") && !gameBoard.classList.contains(\"right-guess-again\")) {\r\n      return (\r\n        gameBoard.classList.remove(\"right-guess\"),\r\n        gameBoard.classList.add(\"right-guess-again\")\r\n      );\r\n    } else if (this.state.lastMove === \"won\" && gameBoard.classList.contains(\"right-guess-again\") && !gameBoard.classList.contains(\"right-guess\")) {\r\n      return (\r\n        gameBoard.classList.remove(\"right-guess-again\"),\r\n        gameBoard.classList.add(\"right-guess\")\r\n      );\r\n    } else if (this.state.lastMove === \"victory\") {\r\n      return (\r\n        gameBoard.classList.remove(\"right-guess\"),\r\n        gameBoard.classList.remove(\"right-guess-again\"),\r\n        gameBoard.classList.remove(\"wrong-guess\"),\r\n        gameBoard.classList.add(\"victory-show\")\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n    \r\n    // return this.state.lastMove === \"won\" ? gameBoard.classList.remove(\"wrong-guess\")\r\n    //   : this.state.lastMove === \"lost\" ? gameBoard.classList.add(\"wrong-guess\")\r\n    //   : this.state.lastMove === null ? null\r\n    //   : null\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <NavBar\r\n            currentRun={this.state.currentRun}\r\n            highScore={this.state.highScore}\r\n           />\r\n          <Wrapper>\r\n            <Game \r\n              message={this.makeMessage()} \r\n              style={this.animateResult()}\r\n            >\r\n              {this.setBoard()}\r\n            </Game>\r\n          </Wrapper>\r\n          <Footer />\r\n        </div>\r\n    );\r\n  };\r\n\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}