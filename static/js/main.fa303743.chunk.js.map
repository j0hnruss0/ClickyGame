{"version":3,"sources":["components/NavBar.js","components/Wrapper.js","components/Game.js","components/Card.js","App.js","index.js"],"names":["NavBar","props","className","currentRun","highScore","Wrapper","children","Game","message","Card","key","id","onClick","pickedChar","value","src","photo","alt","name","App","state","clicked","lastMove","characters","setBoard","shuffled","forEach","chars","push","i","length","j","Math","floor","random","map","data","picked","filter","char","console","log","includes","setState","concat","makeMessage","this","Component","ReactDOM","render","document","getElementById"],"mappings":"gQAgBeA,MAbf,SAAgBC,GACd,OACI,wBAAIC,UAAU,cACV,wBAAIA,UAAU,YACV,wBAAIA,UAAU,YAAW,0DAE7B,wBAAIA,UAAU,4BACV,qCAAWD,EAAME,WAAjB,iBAA2CF,EAAMG,cCHhDC,MAJf,SAAiBJ,GACf,OAAO,yBAAKC,UAAU,qBAAqBD,EAAMK,WCUpCC,MAXf,SAAcN,GACZ,OACE,yBAAKC,UAAU,kBACb,yBAAKA,UAAU,6BACX,uBAAGA,UAAU,eAAeD,EAAMO,UAErCP,EAAMK,WCIEG,MAVf,SAAcR,GAEZ,OACE,yBAAKC,UAAU,kBAAkBQ,IAAKT,EAAMU,GAAIC,QAAS,kBAAMX,EAAMY,WAAWZ,EAAMa,SACpF,yBAAKZ,UAAU,WAAWa,IAAKd,EAAMe,MAAOC,IAAKhB,EAAMiB,OACvD,4BAAKjB,EAAMiB,Q,OCuFFC,E,2MAvFbC,MAAQ,CACNjB,WAAY,EACZC,UAAW,EACXiB,QAAS,GACTC,SAAU,KACVC,c,EAGFC,SAAW,WACT,IAAIC,EAAW,GACfF,EAAWG,QAAQ,SAAAC,GAAK,OACtBF,EAASG,KAAKD,KAGhB,IAAK,IAAIE,EAAIJ,EAASK,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC5C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADE,EAEf,CAACJ,EAASM,GAAIN,EAASI,IAAnDJ,EAASI,GAFkC,KAE9BJ,EAASM,GAFqB,KAK9C,OAAON,EAASU,IAAI,SAAAC,GAAI,OACtB,kBAAC,EAAD,CACE1B,IAAK0B,EAAKzB,GACVG,MAAOsB,EAAKzB,GACZO,KAAMkB,EAAKlB,KACXF,MAAOoB,EAAKpB,MACZH,WAAY,EAAKA,gB,EAKvBA,WAAa,SAACF,GACZ,IAAM0B,EAAS,EAAKjB,MAAMG,WAAWe,OAAO,SAAAC,GAAI,OAAIA,EAAK5B,KAAOA,IAChE6B,QAAQC,IAAIJ,EAAO,GAAG1B,KACjB,EAAKS,MAAMC,QAAQqB,SAASL,EAAO,GAAG1B,KAAO,EAAKS,MAAMhB,UAAY,EAAKgB,MAAMjB,WAClF,EAAKwC,SAAS,SAAAvB,GACZ,MAAO,CACLC,QAASD,EAAMC,QAAQuB,OAAOP,EAAO,GAAG1B,IACxCR,WAAYiB,EAAMjB,WAAa,EAC/BmB,SAAU,UAGJ,EAAKF,MAAMC,QAAQqB,SAASL,EAAO,GAAG1B,KAAO,EAAKS,MAAMhB,WAAa,EAAKgB,MAAMjB,WAC1F,EAAKwC,SAAS,SAAAvB,GACZ,MAAO,CACLC,QAASD,EAAMC,QAAQuB,OAAOP,EAAO,GAAG1B,IACxCR,WAAYiB,EAAMjB,WAAa,EAC/BC,UAAWgB,EAAMhB,UAAY,EAC7BkB,SAAU,SAGL,EAAKF,MAAMC,QAAQqB,SAASL,EAAO,GAAG1B,KAC/C,EAAKgC,SAAS,WACZ,MAAO,CACLtB,QAAS,GACTlB,WAAY,EACZmB,SAAU,UAIhBkB,QAAQC,IAAI,EAAKrB,MAAMC,U,EAIzBwB,YAAc,WACZ,MAA+B,QAAxB,EAAKzB,MAAME,SAAqB,qBACX,SAAxB,EAAKF,MAAME,SAAsB,qDAAuD,EAAKF,MAAMhB,UACnG,4C,wEAIJ,OACI,6BACE,kBAAC,EAAD,CACED,WAAY2C,KAAK1B,MAAMjB,WACvBC,UAAW0C,KAAK1B,MAAMhB,YAExB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAMI,QAASsC,KAAKD,eACjBC,KAAKtB,kB,GA/EFuB,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.fa303743.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction NavBar(props) {\r\n  return (\r\n      <ul className=\"nav navbar\">\r\n          <li className=\"nav-item\">\r\n              <h3 className=\"app-name\"><strong>Simpsons Clicky Game</strong></h3>\r\n          </li>\r\n          <li className=\"nav-item score-card mr-4\">\r\n              <p>Score: {props.currentRun} || Hi-Score: {props.highScore}</p>\r\n          </li>\r\n      </ul>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Wrapper(props) {\r\n  return <div className=\"wrapper container\">{props.children}</div>;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Game(props) {\r\n  return (\r\n    <div className=\"game-board row\">\r\n      <div className=\"col-10 offset-1 alert-box\">\r\n          <p className=\"text-center\">{props.message}</p>\r\n      </div>\r\n      {props.children}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Game;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Card(props) {\r\n  \r\n  return (\r\n    <div className=\"col-3 char-card\" key={props.id} onClick={() => props.pickedChar(props.value)}>\r\n      <img className=\"char-pic\" src={props.photo} alt={props.name}/>\r\n      <h4>{props.name}</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;","import React, { Component } from \"react\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Wrapper from \"./components/Wrapper\";\r\nimport Game from \"./components/Game\";\r\nimport Card from \"./components/Card\";\r\nimport characters from \"./characters.json\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    currentRun: 0,\r\n    highScore: 0,\r\n    clicked: [],\r\n    lastMove: null,\r\n    characters\r\n  };\r\n\r\n  setBoard = () => {\r\n    let shuffled = [];\r\n    characters.forEach(chars => \r\n      shuffled.push(chars)\r\n    );\r\n    //console.log(shuffled);\r\n    for (let i = shuffled.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\r\n    };\r\n    \r\n    return shuffled.map(data => (\r\n      <Card\r\n        key={data.id}\r\n        value={data.id}\r\n        name={data.name}\r\n        photo={data.photo}\r\n        pickedChar={this.pickedChar}\r\n      />\r\n    ))\r\n  };\r\n\r\n  pickedChar = (id) => {\r\n    const picked = this.state.characters.filter(char => char.id === id);\r\n    console.log(picked[0].id);\r\n    if (!this.state.clicked.includes(picked[0].id) && this.state.highScore > this.state.currentRun) {\r\n      this.setState(state => {\r\n        return {\r\n          clicked: state.clicked.concat(picked[0].id),\r\n          currentRun: state.currentRun + 1,\r\n          lastMove: \"won\"\r\n        };\r\n      });\r\n    } else if (!this.state.clicked.includes(picked[0].id) && this.state.highScore <= this.state.currentRun) {\r\n      this.setState(state => {\r\n        return {\r\n          clicked: state.clicked.concat(picked[0].id),\r\n          currentRun: state.currentRun + 1,\r\n          highScore: state.highScore + 1,\r\n          lastMove: \"won\"\r\n        };\r\n      });\r\n    } else if (this.state.clicked.includes(picked[0].id)) {\r\n      this.setState(() => {\r\n        return {\r\n          clicked: [],\r\n          currentRun: 0,\r\n          lastMove: \"lost\"\r\n        };\r\n      });\r\n    }\r\n    console.log(this.state.clicked);\r\n    //console.log(this.state.currentRun);\r\n  }\r\n\r\n  makeMessage = () => {\r\n    return this.state.lastMove === \"won\" ? \"You guessed right!\"\r\n      : this.state.lastMove === \"lost\" ? \"Oops, you picked that already. Your best score is \" + this.state.highScore\r\n      : \"Pick a character you didn't pick before!\" \r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n          <NavBar\r\n            currentRun={this.state.currentRun}\r\n            highScore={this.state.highScore}\r\n           />\r\n          <Wrapper>\r\n            <Game message={this.makeMessage()}>\r\n              {this.setBoard()}\r\n            </Game>\r\n          </Wrapper>\r\n        </div>\r\n    );\r\n  };\r\n\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}